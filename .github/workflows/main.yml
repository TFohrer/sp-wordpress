# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      CI: true

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # - name: Create .env file
      #   uses: SpicyPizza/create-envfile@v1
      #   with:
      #     envkey_BASE_URL: ${{secrets.BASE_URL}}
      #     file_name: .env

      - name: Build ðŸ”§
        run: yarn build
        env:
          BASE_URL: ${{secrets.BASE_URL}}
      # - name: Deploy/Sync ðŸš€
      #   env:
      #     dest: '${{secrets.SSH_USER}}@${{secrets.SSH_SERVER}}:${{secrets.DEPLOY_DESTINATION}}'
      #   run: |
      #     echo "${{secrets.DEPLOY_KEY}}" > deploy_key
      #     chmod 600 ./deploy_key
      #     rsync -chav --delete \
      #       -e 'ssh -i ./deploy_key -o StrictHostKeyChecking=no' \
      #       --exclude /.git/ \
      #       --exclude /.github/ \
      #       --exclude /node_modules/ \
      #       ./ ${{env.dest}}
